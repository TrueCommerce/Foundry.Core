<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DemoService.Microservice</name>
    </assembly>
    <members>
        <member name="T:DemoService.Microservice.ApiVersion">
            <summary>API versions</summary>
        </member>
        <member name="P:DemoService.Microservice.ApiVersion.CurrentApiVersion">
            <summary>Current API version</summary>
        </member>
        <member name="P:DemoService.Microservice.ApiVersion.ApiVersions">
            <summary>API versions</summary>
        </member>
        <member name="T:DemoService.Microservice.AuthenticationHandler">
            <summary>Authentication handler</summary>
        </member>
        <member name="M:DemoService.Microservice.AuthenticationHandler.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>Initializes a new instance of the <see cref="T:DemoService.Microservice.AuthenticationHandler"/></summary>
            <param name="next">Next handler</param>
            <param name="configuration">Application configuration</param>
        </member>
        <member name="M:DemoService.Microservice.AuthenticationHandler.Invoke(Microsoft.AspNetCore.Http.HttpContext,Foundry.Core.Shared.IUnitOfWork)">
            <summary>Invokes handler</summary>
            <param name="httpContext">HTTP context</param>
            <param name="unitOfWork">Unit of work</param>
        </member>
        <member name="T:DemoService.Microservice.Controllers.OrdersController">
            <summary><see cref="T:DemoService.Core.Models.Order"/> operations</summary>
        </member>
        <member name="M:DemoService.Microservice.Controllers.OrdersController.#ctor(AutoMapper.IMapper,Foundry.Core.Shared.IUnitOfWork)">
            <summary>Creates a new instance of the <see cref="T:DemoService.Microservice.Controllers.OrdersController"/></summary>
            <param name="mapper">Injected mapper</param>
            <param name="unitOfWork">Injected unit of work</param>
        </member>
        <member name="M:DemoService.Microservice.Controllers.OrdersController.PostOrderLine(DemoService.Core.Models.OrderLine)">
            <summary>Posts Order line</summary>
            <param name="entity">Order line</param>
        </member>
        <member name="M:DemoService.Microservice.Controllers.OrdersController.PostOrderLines(System.Guid,DemoService.Core.Models.OrderLine)">
            <summary>Posts Order line</summary>
            <param name="id">Order id</param>
            <param name="entity">Order line</param>
        </member>
        <member name="M:DemoService.Microservice.Controllers.OrdersController.PatchOrderLine(System.Guid,System.Int32,Microsoft.AspNet.OData.Delta{DemoService.Core.Models.OrderLine})">
            <summary>Patch Order line</summary>
            <param name="orderId">Order id</param>
            <param name="lineNumber">Order line number</param>
            <param name="patch">Order line</param>
        </member>
        <member name="M:DemoService.Microservice.Controllers.OrdersController.DeleteOrderLine(System.Guid,System.Int32)">
            <summary>Delete Order secret question answer</summary>
            <param name="orderId">Order id</param>
            <param name="lineNumber">Order secret question id</param>
        </member>
        <member name="T:DemoService.Microservice.Controllers.TenantActionsController">
            <summary><see cref="T:Foundry.Core.Shared.Models.TenantAction"/> operations</summary>
        </member>
        <member name="M:DemoService.Microservice.Controllers.TenantActionsController.#ctor(AutoMapper.IMapper,Foundry.Core.Shared.IUnitOfWork)">
            <summary>Creates a new instance of the <see cref="T:DemoService.Microservice.Controllers.TenantActionsController"/></summary>
            <param name="mapper">Injected mapper</param>
            <param name="unitOfWork">Injected unit of work</param>
        </member>
        <member name="M:DemoService.Microservice.Controllers.TenantActionsController.Import(System.String,System.Boolean)">
            <summary>Imports data</summary>
            <param name="kind">Entity kind</param>
            <param name="overwriteExisting">Indicates whether to overwrite existing entities</param>
            <returns></returns>
        </member>
        <member name="M:DemoService.Microservice.Controllers.TenantActionsController.Export(Microsoft.AspNet.OData.ODataActionParameters)">
            <summary>Exports data</summary>
            <param name="parameters">Export parameters</param>
            <returns></returns>
        </member>
        <member name="T:DemoService.Microservice.Program">
            <summary>Program</summary>
        </member>
        <member name="M:DemoService.Microservice.Program.Main(System.String[])">
            <summary>Main entry</summary>
            <param name="args">arguments</param>
        </member>
        <member name="M:DemoService.Microservice.Program.CreateWebHostBuilder(System.String[])">
            <summary>Build web host</summary>
            <param name="args">Arguments</param>
            <returns>Web host instance</returns>
        </member>
        <member name="T:DemoService.Microservice.Startup">
            <summary>Startup class</summary>
        </member>
        <member name="P:DemoService.Microservice.Startup.Configuration">
            <summary>Container configuration</summary>
        </member>
        <member name="M:DemoService.Microservice.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>Startup container</summary>
            <param name="configuration">Container configuration</param>
        </member>
        <member name="M:DemoService.Microservice.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>Configures services</summary>
            <param name="services">Container services</param>
        </member>
        <member name="M:DemoService.Microservice.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>Configure container</summary>
            <param name="app">Application builder</param>
            <param name="env">Hosting environment</param>
        </member>
    </members>
</doc>
